from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class PageInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, page=None, size=None, total_items=None, total_pages=None):  # noqa: E501
        """PageInfo - a model defined in OpenAPI

        :param page: The page of this PageInfo.  # noqa: E501
        :type page: int
        :param size: The size of this PageInfo.  # noqa: E501
        :type size: int
        :param total_items: The total_items of this PageInfo.  # noqa: E501
        :type total_items: int
        :param total_pages: The total_pages of this PageInfo.  # noqa: E501
        :type total_pages: int
        """
        self.openapi_types = {
            'page': int,
            'size': int,
            'total_items': int,
            'total_pages': int
        }

        self.attribute_map = {
            'page': 'page',
            'size': 'size',
            'total_items': 'total_items',
            'total_pages': 'total_pages'
        }

        self._page = page
        self._size = size
        self._total_items = total_items
        self._total_pages = total_pages

    @classmethod
    def from_dict(cls, dikt) -> 'PageInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The PageInfo of this PageInfo.  # noqa: E501
        :rtype: PageInfo
        """
        return util.deserialize_model(dikt, cls)

    @property
    def page(self) -> int:
        """Gets the page of this PageInfo.


        :return: The page of this PageInfo.
        :rtype: int
        """
        return self._page

    @page.setter
    def page(self, page: int):
        """Sets the page of this PageInfo.


        :param page: The page of this PageInfo.
        :type page: int
        """

        self._page = page

    @property
    def size(self) -> int:
        """Gets the size of this PageInfo.


        :return: The size of this PageInfo.
        :rtype: int
        """
        return self._size

    @size.setter
    def size(self, size: int):
        """Sets the size of this PageInfo.


        :param size: The size of this PageInfo.
        :type size: int
        """

        self._size = size

    @property
    def total_items(self) -> int:
        """Gets the total_items of this PageInfo.


        :return: The total_items of this PageInfo.
        :rtype: int
        """
        return self._total_items

    @total_items.setter
    def total_items(self, total_items: int):
        """Sets the total_items of this PageInfo.


        :param total_items: The total_items of this PageInfo.
        :type total_items: int
        """

        self._total_items = total_items

    @property
    def total_pages(self) -> int:
        """Gets the total_pages of this PageInfo.


        :return: The total_pages of this PageInfo.
        :rtype: int
        """
        return self._total_pages

    @total_pages.setter
    def total_pages(self, total_pages: int):
        """Sets the total_pages of this PageInfo.


        :param total_pages: The total_pages of this PageInfo.
        :type total_pages: int
        """

        self._total_pages = total_pages
