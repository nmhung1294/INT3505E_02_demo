from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.page_info import PageInfo
from openapi_server.models.user import User
from openapi_server import util

from openapi_server.models.page_info import PageInfo  # noqa: E501
from openapi_server.models.user import User  # noqa: E501

class UsersGet200Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, items=None, page=None):  # noqa: E501
        """UsersGet200Response - a model defined in OpenAPI

        :param items: The items of this UsersGet200Response.  # noqa: E501
        :type items: List[User]
        :param page: The page of this UsersGet200Response.  # noqa: E501
        :type page: PageInfo
        """
        self.openapi_types = {
            'items': List[User],
            'page': PageInfo
        }

        self.attribute_map = {
            'items': 'items',
            'page': 'page'
        }

        self._items = items
        self._page = page

    @classmethod
    def from_dict(cls, dikt) -> 'UsersGet200Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The _users_get_200_response of this UsersGet200Response.  # noqa: E501
        :rtype: UsersGet200Response
        """
        return util.deserialize_model(dikt, cls)

    @property
    def items(self) -> List[User]:
        """Gets the items of this UsersGet200Response.


        :return: The items of this UsersGet200Response.
        :rtype: List[User]
        """
        return self._items

    @items.setter
    def items(self, items: List[User]):
        """Sets the items of this UsersGet200Response.


        :param items: The items of this UsersGet200Response.
        :type items: List[User]
        """

        self._items = items

    @property
    def page(self) -> PageInfo:
        """Gets the page of this UsersGet200Response.


        :return: The page of this UsersGet200Response.
        :rtype: PageInfo
        """
        return self._page

    @page.setter
    def page(self, page: PageInfo):
        """Sets the page of this UsersGet200Response.


        :param page: The page of this UsersGet200Response.
        :type page: PageInfo
        """

        self._page = page
